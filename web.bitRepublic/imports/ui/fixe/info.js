/*----------------------------------------*\
  bitRepublic - info.js
  @author Evrard Vincent (vincent@ogre.be)
  @Date:   2018-01-31 22:11:26
  @Last Modified time: 2018-04-30 14:34:07
\*----------------------------------------*/
import React, { Component } from 'react';

import Utilities from '../../utilities';

// App component - represents the whole app
export default class FixeInfo extends Component {
	constructor(props){
		super(props);


		this.data = [{
			hash : "what",
			title : "what",
			desciption : [
				"The BitSoil Tax & Hack Campaign takes shape in the context of the ongoing artwork bitREPUBLIC, that seeks to redefine and redesign tools for an open, artificial, DIY republic. The aim is to guarantee those disenfranchised, displaced or excluded, an unconditional right to socio-economic inclusion, compensating, beyond the control of states, some actual shortcomings."
			]
		},{
			hash : "how_it_works",
			title : "how it works",
			desciption : [
				"The BitSoil Tax & Hack Campaign is directly connected with bitREPUBLIC - an offline artwork which currently is being exhibited at GLUONâ€™s Art and Tech hub in Brussels.",
				"During the campaign each action on Twitter triggers a tiny offline ticket receiver of the bitREPUBLIC framework, assigning at random a micro amount of bitsoils to a wallet of a participant of the campaign. Each wallet stands for a citizen of bitREPUBLIC.",
				"On each ticket printer one can follow the production of bitsoils generated by users and the bots on Twitter. Visitors are part of and are asked to participate and to follow up the redistribution across people's wallets.",
				"Here the technology is employed as a critical tool to recover basic rights to a certain extent and to spread prosperity beyond prevailing national and international systems. By means of a new taxation system the project explores possibilities to redistribute internet wealth in a society of equals, regardless of origin, gender and other characteristics of the individual."
			]
		},{
			hash : "calendar",
			title : "calendar",
			desciption : [
				"The campaign is touring. Please find the dates below.",
				"03/05/2017 @ And& Summit Festival Leuven",
				"17/05/2017 @ Gluon Art & Tech Hub Brussels"
			]
		},{
			hash : "host_the_installation",
			title : "host the installation",
			desciption : [
				"To host the installation in your city. Contact us @ mailus@bitsoil.tax."
			]
		}];

		let select = 0;

		_.map(this.data, (e, k)=>{
			if(e.hash === FlowRouter.current().context.hash){
				select = k;
			}
		});



		this.state = {
			selected : select >= this.data.length ? false : select
		}


	}
	handleClickOnLink(k, event){
		event.preventDefault();

		Utilities.scrollTo('contentListItemContainer', 100);

		this.setState({
			selected : k
		});
	}
	render() {
		return (
			<div className="container">
				<div className="contents-list">
					<ul className="contents-selector-list">
						{
							this.data.map((d, k) => (
								<li key={k} className={'contents-selector-list__item '}>
									<a
										className={"contents-selector-list__button " + (this.state.selected === k ? 'selected' : "")}
										onClick={this.handleClickOnLink.bind(this, k)}
										href={FlowRouter.path("installation") + "#" + d.title.split(" ").join("_")}
									>
										{d.title}
									</a>
								</li>
							))
						}
					</ul>

					<div id="contentListItemContainer" className="contents-list__item">
						{
							this.data.map((d, k) => (
								<div id={d.hash} key={k} className={this.state.selected === k ? "" : "hidden"}>
									{
										d.desciption.map((desc, k) => (
											<p>{desc}</p>
										))
									}
								</div>
							))
						}
					</div>
				</div>
			</div>
		);
	}
}
